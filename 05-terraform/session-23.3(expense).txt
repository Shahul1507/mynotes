--------------------
ec2-instance(ec2.tf)|
--------------------
resource "aws_instance" "expense" {
  count = length(var.instance_names) # lenght of the items in list of default variables
  ami = "ami-09c813fb71547fc4f"
  instance_type = "t3.micro"
  vpc_security_group_ids = [aws_security_group.allow_ssh_terraform.id]
  # tags = {
  #   Name = var.instance_names[count.index]
  tags=merge(
    var.common_tags,
    {
      Name=var.instance_names[count.index]
    }
  )
}

resource "aws_security_group" "allow_ssh_terraform" {
    name = "allow_sshh" # allow_ssh is already present in my aws account
    description = "allow port number 22 for SSH access"

    egress {
        from_port        = 0
        to_port          = 0
        protocol         = "-1" # -1 means all
        cidr_blocks      = ["0.0.0.0/0"]
        ipv6_cidr_blocks = ["::/0"]
    }

    ingress {
        from_port        = 22
        to_port          = 22
        protocol         = "tcp"
        cidr_blocks      = ["0.0.0.0/0"] # allow from everyone
        ipv6_cidr_blocks = ["::/0"]
    }

    
    tags = merge(
      var.common_tags,
      {
        Name="allow-sshh"
      }
    )
}
------------
variable.tf |
------------
variable "instance_names" {
  type        = list(string)
  default     = ["mysql","backend","frontend"]
}

variable "common_tags" {
  type = map
  default = {
    Project = "expense"
    Environment = "dev"
    Terraform = "true"
  }

}

variable "zone_id" {
  default     = "Z06321023RSPR3MPYN5JW" 
}

variable "domain_name" {
  default     = "shahul.online" 
}
--------
r53.tf |
--------
resource "aws_route53_record" "expense" {
  count = length(var.instance_names)
  zone_id = var.zone_id
  name    = "${var.instance_names[count.index]}.${var.domain_name}"
  type    = "A"
  ttl     = 1
  records = [aws_instance.expense[count.index].private_ip]
}

----------
output.tf |
----------
output "instance_info" {
  value       = aws_instance.expense
  
}

-------------
provider.tf |
-------------
terraform {
  required_providers {
    aws = {
      source = "hashicorp/aws"
      version = "5.67.0"
    }
  }
}

provider "aws" {
  # Configuration options
  region= "us-east-1"
}